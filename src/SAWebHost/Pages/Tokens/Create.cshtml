@page
@model SAWebHost.Pages.Tokens.CreateModel
@inject UserManager<ApplicationUser> userManager

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>AccessTokenEntry</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="AccessTokenEntry.Id" class="control-label"></label>
                <input asp-for="AccessTokenEntry.Id" class="form-control" readonly />
                <span asp-validation-for="AccessTokenEntry.Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AccessTokenEntry.OrganizationId" class="control-label"></label>
                <select asp-for="AccessTokenEntry.OrganizationId" class ="form-control" asp-items="Model.OrganizationOptions"></select>
            </div>
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Access Tokens</h5>
                    <div class="card-text">
                        <div class="form-group">
                        </div>
                        <div class="form-group">
                            <label asp-for="AccessTokenEntry.ProviderId" class="control-label"></label>
                            <select asp-for="AccessTokenEntry.ProviderId" class ="form-control" asp-items="Model.ApplicationOptions"></select>
                        </div>
                        <div class="form-group">
                            <label asp-for="AccessTokenEntry.AccessToken" class="control-label"></label>
                            <input asp-for="AccessTokenEntry.AccessToken" class="form-control" />
                            <span asp-validation-for="AccessTokenEntry.AccessToken" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="AccessTokenEntry.ExpiresIn" class="control-label"></label>
                            <input asp-for="AccessTokenEntry.ExpiresIn" class="form-control" />
                            <span asp-validation-for="AccessTokenEntry.ExpiresIn" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="AccessTokenEntry.RefreshToken" class="control-label"></label>
                            <input asp-for="AccessTokenEntry.RefreshToken" class="form-control" />
                            <span asp-validation-for="AccessTokenEntry.RefreshToken" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="AccessTokenEntry.RefreshTokenExpiresIn" class="control-label"></label>
                            <input asp-for="AccessTokenEntry.RefreshTokenExpiresIn" class="form-control" />
                            <span asp-validation-for="AccessTokenEntry.RefreshTokenExpiresIn" class="text-danger"></span>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-secondary" asp-page-handler="Connect">Connect</button>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="AccessTokenEntry.CreatedOn" class="control-label"></label>
                <input asp-for="AccessTokenEntry.CreatedOn" class="form-control" readonly />
                <span asp-validation-for="AccessTokenEntry.CreatedOn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
